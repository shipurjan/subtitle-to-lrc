# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build and release
run-name: <${{ github.ref_name }}> Build and release

on:
  push:
    tags:
      - 'v*.*.*'
    
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Exit if not on master branch
      if: endsWith(github.event.base_ref, 'master') == false
      run: exit -1

    - name: Write release version
      run: |
        VERSION=${GITHUB_REF_NAME#v}
        echo Version: $VERSION
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Show directory tree before build
      run: tree

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.5'

    - name: Create artifacts directory
      run: mkdir artifacts

    - name: Build for different platforms
      run: |
        PLATFORMS=("windows/amd64" "linux/amd64")
        for PLATFORM in "${PLATFORMS[@]}"
        do
          arr=(${PLATFORM//\// })
          GOOS=${arr[0]} GOARCH=${arr[1]} bash -c '\
            go build -o out/ -ldflags "-X main.version=${VERSION}" &&
            zip -j artifacts/${{ github.event.repository.name }}_${VERSION}-$GOOS-$GOARCH.zip out/* &&
            rm -rf out/*'
        done

    - name: Show directory tree after build
      run: tree

    - name: Test
      run: go test -v ./...

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4.1.0
      with:
        name: build-artifact
        path: ./artifacts

  release:
    name: Github release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Write release version
      run: |
        VERSION=${GITHUB_REF_NAME#v}
        echo Version: $VERSION
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Download Build Artifact
      uses: actions/download-artifact@v4.1.1
      with:
        name: build-artifact
        path: ./artifacts

    - name: Show directory tree before release
      run: tree

    - name: Create Git Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ./artifacts/*
        fail_on_unmatched_files: true
        body: |
          This is the release for ${{ github.ref_name }}